{-# LANGUAGE BangPatterns, DeriveDataTypeable, FlexibleInstances, MultiParamTypeClasses #-}
module Data.HES.Messages (protoInfo, fileDescriptorProto) where
import Prelude ((+), (/))
import qualified Prelude as Prelude'
import qualified Data.Typeable as Prelude'
import qualified Data.Data as Prelude'
import qualified Text.ProtocolBuffers.Header as P'
import Text.DescriptorProtos.FileDescriptorProto(FileDescriptorProto)
import Text.ProtocolBuffers.Reflections (ProtoInfo)
import qualified Text.ProtocolBuffers.WireMessage as P' (wireGet,getFromBS)
 
protoInfo :: ProtoInfo
protoInfo
 = Prelude'.read
    "ProtoInfo {protoMod = ProtoName {protobufName = FIName \".HES.Messages\", haskellPrefix = [], parentModule = [MName \"HES\"], baseName = MName \"Messages\"}, protoFilePath = [\"HES\",\"Messages.hs\"], protoSource = \"src/proto/event_store.proto\", extensionKeys = fromList [], messages = [DescriptorInfo {descName = ProtoName {protobufName = FIName \".HES.Messages.NewEvent\", haskellPrefix = [], parentModule = [MName \"HES\",MName \"Messages\"], baseName = MName \"NewEvent\"}, descFilePath = [\"HES\",\"Messages\",\"NewEvent.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.NewEvent.event_id\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"NewEvent\"], baseName' = FName \"event_id\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.NewEvent.event_type\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"NewEvent\"], baseName' = FName \"event_type\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.NewEvent.is_json\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"NewEvent\"], baseName' = FName \"is_json\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.NewEvent.data\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"NewEvent\"], baseName' = FName \"data'\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.NewEvent.metadata\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"NewEvent\"], baseName' = FName \"metadata\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 42}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".HES.Messages.EventRecord\", haskellPrefix = [], parentModule = [MName \"HES\",MName \"Messages\"], baseName = MName \"EventRecord\"}, descFilePath = [\"HES\",\"Messages\",\"EventRecord.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.EventRecord.event_stream_id\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"EventRecord\"], baseName' = FName \"event_stream_id\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.EventRecord.event_number\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"EventRecord\"], baseName' = FName \"event_number\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 5}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.EventRecord.event_id\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"EventRecord\"], baseName' = FName \"event_id\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.EventRecord.event_type\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"EventRecord\"], baseName' = FName \"event_type\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.EventRecord.data\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"EventRecord\"], baseName' = FName \"data'\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 42}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.EventRecord.metadata\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"EventRecord\"], baseName' = FName \"metadata\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 50}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".HES.Messages.ResolvedIndexedEvent\", haskellPrefix = [], parentModule = [MName \"HES\",MName \"Messages\"], baseName = MName \"ResolvedIndexedEvent\"}, descFilePath = [\"HES\",\"Messages\",\"ResolvedIndexedEvent.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.ResolvedIndexedEvent.event\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"ResolvedIndexedEvent\"], baseName' = FName \"event\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".HES.Messages.EventRecord\", haskellPrefix = [], parentModule = [MName \"HES\",MName \"Messages\"], baseName = MName \"EventRecord\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.ResolvedIndexedEvent.link\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"ResolvedIndexedEvent\"], baseName' = FName \"link\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".HES.Messages.EventRecord\", haskellPrefix = [], parentModule = [MName \"HES\",MName \"Messages\"], baseName = MName \"EventRecord\"}), hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".HES.Messages.ResolvedEvent\", haskellPrefix = [], parentModule = [MName \"HES\",MName \"Messages\"], baseName = MName \"ResolvedEvent\"}, descFilePath = [\"HES\",\"Messages\",\"ResolvedEvent.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.ResolvedEvent.event\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"ResolvedEvent\"], baseName' = FName \"event\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".HES.Messages.EventRecord\", haskellPrefix = [], parentModule = [MName \"HES\",MName \"Messages\"], baseName = MName \"EventRecord\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.ResolvedEvent.link\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"ResolvedEvent\"], baseName' = FName \"link\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".HES.Messages.EventRecord\", haskellPrefix = [], parentModule = [MName \"HES\",MName \"Messages\"], baseName = MName \"EventRecord\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.ResolvedEvent.commit_position\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"ResolvedEvent\"], baseName' = FName \"commit_position\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.ResolvedEvent.prepare_position\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"ResolvedEvent\"], baseName' = FName \"prepare_position\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".HES.Messages.DeniedToRoute\", haskellPrefix = [], parentModule = [MName \"HES\",MName \"Messages\"], baseName = MName \"DeniedToRoute\"}, descFilePath = [\"HES\",\"Messages\",\"DeniedToRoute.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.DeniedToRoute.external_tcp_address\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"DeniedToRoute\"], baseName' = FName \"external_tcp_address\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.DeniedToRoute.external_tcp_port\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"DeniedToRoute\"], baseName' = FName \"external_tcp_port\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 5}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.DeniedToRoute.external_http_address\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"DeniedToRoute\"], baseName' = FName \"external_http_address\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.DeniedToRoute.external_http_port\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"DeniedToRoute\"], baseName' = FName \"external_http_port\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 5}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".HES.Messages.CreateStream\", haskellPrefix = [], parentModule = [MName \"HES\",MName \"Messages\"], baseName = MName \"CreateStream\"}, descFilePath = [\"HES\",\"Messages\",\"CreateStream.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.CreateStream.event_stream_id\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"CreateStream\"], baseName' = FName \"event_stream_id\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.CreateStream.request_id\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"CreateStream\"], baseName' = FName \"request_id\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.CreateStream.metadata\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"CreateStream\"], baseName' = FName \"metadata\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.CreateStream.allow_forwarding\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"CreateStream\"], baseName' = FName \"allow_forwarding\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.CreateStream.is_json\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"CreateStream\"], baseName' = FName \"is_json\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 40}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".HES.Messages.CreateStreamCompleted\", haskellPrefix = [], parentModule = [MName \"HES\",MName \"Messages\"], baseName = MName \"CreateStreamCompleted\"}, descFilePath = [\"HES\",\"Messages\",\"CreateStreamCompleted.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.CreateStreamCompleted.result\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"CreateStreamCompleted\"], baseName' = FName \"result\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".HES.Messages.OperationResult\", haskellPrefix = [], parentModule = [MName \"HES\",MName \"Messages\"], baseName = MName \"OperationResult\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.CreateStreamCompleted.message\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"CreateStreamCompleted\"], baseName' = FName \"message\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".HES.Messages.WriteEvents\", haskellPrefix = [], parentModule = [MName \"HES\",MName \"Messages\"], baseName = MName \"WriteEvents\"}, descFilePath = [\"HES\",\"Messages\",\"WriteEvents.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.WriteEvents.event_stream_id\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"WriteEvents\"], baseName' = FName \"event_stream_id\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.WriteEvents.expected_version\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"WriteEvents\"], baseName' = FName \"expected_version\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 5}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.WriteEvents.events\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"WriteEvents\"], baseName' = FName \"events\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".HES.Messages.NewEvent\", haskellPrefix = [], parentModule = [MName \"HES\",MName \"Messages\"], baseName = MName \"NewEvent\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.WriteEvents.allow_forwarding\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"WriteEvents\"], baseName' = FName \"allow_forwarding\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".HES.Messages.WriteEventsCompleted\", haskellPrefix = [], parentModule = [MName \"HES\",MName \"Messages\"], baseName = MName \"WriteEventsCompleted\"}, descFilePath = [\"HES\",\"Messages\",\"WriteEventsCompleted.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.WriteEventsCompleted.result\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"WriteEventsCompleted\"], baseName' = FName \"result\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".HES.Messages.OperationResult\", haskellPrefix = [], parentModule = [MName \"HES\",MName \"Messages\"], baseName = MName \"OperationResult\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.WriteEventsCompleted.message\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"WriteEventsCompleted\"], baseName' = FName \"message\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.WriteEventsCompleted.first_event_number\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"WriteEventsCompleted\"], baseName' = FName \"first_event_number\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 5}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".HES.Messages.DeleteStream\", haskellPrefix = [], parentModule = [MName \"HES\",MName \"Messages\"], baseName = MName \"DeleteStream\"}, descFilePath = [\"HES\",\"Messages\",\"DeleteStream.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.DeleteStream.event_stream_id\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"DeleteStream\"], baseName' = FName \"event_stream_id\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.DeleteStream.expected_version\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"DeleteStream\"], baseName' = FName \"expected_version\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 5}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.DeleteStream.allow_forwarding\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"DeleteStream\"], baseName' = FName \"allow_forwarding\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".HES.Messages.DeleteStreamCompleted\", haskellPrefix = [], parentModule = [MName \"HES\",MName \"Messages\"], baseName = MName \"DeleteStreamCompleted\"}, descFilePath = [\"HES\",\"Messages\",\"DeleteStreamCompleted.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.DeleteStreamCompleted.result\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"DeleteStreamCompleted\"], baseName' = FName \"result\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".HES.Messages.OperationResult\", haskellPrefix = [], parentModule = [MName \"HES\",MName \"Messages\"], baseName = MName \"OperationResult\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.DeleteStreamCompleted.message\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"DeleteStreamCompleted\"], baseName' = FName \"message\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".HES.Messages.ReadEvent\", haskellPrefix = [], parentModule = [MName \"HES\",MName \"Messages\"], baseName = MName \"ReadEvent\"}, descFilePath = [\"HES\",\"Messages\",\"ReadEvent.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.ReadEvent.event_stream_id\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"ReadEvent\"], baseName' = FName \"event_stream_id\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.ReadEvent.event_number\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"ReadEvent\"], baseName' = FName \"event_number\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 5}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.ReadEvent.resolve_link_tos\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"ReadEvent\"], baseName' = FName \"resolve_link_tos\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".HES.Messages.ReadEventCompleted\", haskellPrefix = [], parentModule = [MName \"HES\",MName \"Messages\"], baseName = MName \"ReadEventCompleted\"}, descFilePath = [\"HES\",\"Messages\",\"ReadEventCompleted.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.ReadEventCompleted.result\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"ReadEventCompleted\"], baseName' = FName \"result\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".HES.Messages.ReadEventCompleted.ReadEventResult\", haskellPrefix = [], parentModule = [MName \"HES\",MName \"Messages\",MName \"ReadEventCompleted\"], baseName = MName \"ReadEventResult\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.ReadEventCompleted.event\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"ReadEventCompleted\"], baseName' = FName \"event\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".HES.Messages.ResolvedIndexedEvent\", haskellPrefix = [], parentModule = [MName \"HES\",MName \"Messages\"], baseName = MName \"ResolvedIndexedEvent\"}), hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".HES.Messages.ReadStreamEvents\", haskellPrefix = [], parentModule = [MName \"HES\",MName \"Messages\"], baseName = MName \"ReadStreamEvents\"}, descFilePath = [\"HES\",\"Messages\",\"ReadStreamEvents.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.ReadStreamEvents.event_stream_id\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"ReadStreamEvents\"], baseName' = FName \"event_stream_id\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.ReadStreamEvents.from_event_number\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"ReadStreamEvents\"], baseName' = FName \"from_event_number\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 5}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.ReadStreamEvents.max_count\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"ReadStreamEvents\"], baseName' = FName \"max_count\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 5}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.ReadStreamEvents.resolve_link_tos\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"ReadStreamEvents\"], baseName' = FName \"resolve_link_tos\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".HES.Messages.ReadStreamEventsCompleted\", haskellPrefix = [], parentModule = [MName \"HES\",MName \"Messages\"], baseName = MName \"ReadStreamEventsCompleted\"}, descFilePath = [\"HES\",\"Messages\",\"ReadStreamEventsCompleted.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.ReadStreamEventsCompleted.events\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"ReadStreamEventsCompleted\"], baseName' = FName \"events\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".HES.Messages.ResolvedIndexedEvent\", haskellPrefix = [], parentModule = [MName \"HES\",MName \"Messages\"], baseName = MName \"ResolvedIndexedEvent\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.ReadStreamEventsCompleted.result\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"ReadStreamEventsCompleted\"], baseName' = FName \"result\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".HES.Messages.ReadStreamEventsCompleted.ReadStreamResult\", haskellPrefix = [], parentModule = [MName \"HES\",MName \"Messages\",MName \"ReadStreamEventsCompleted\"], baseName = MName \"ReadStreamResult\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.ReadStreamEventsCompleted.next_event_number\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"ReadStreamEventsCompleted\"], baseName' = FName \"next_event_number\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 5}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.ReadStreamEventsCompleted.last_event_number\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"ReadStreamEventsCompleted\"], baseName' = FName \"last_event_number\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 5}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.ReadStreamEventsCompleted.is_end_of_stream\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"ReadStreamEventsCompleted\"], baseName' = FName \"is_end_of_stream\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 40}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.ReadStreamEventsCompleted.last_commit_position\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"ReadStreamEventsCompleted\"], baseName' = FName \"last_commit_position\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 48}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".HES.Messages.ReadAllEvents\", haskellPrefix = [], parentModule = [MName \"HES\",MName \"Messages\"], baseName = MName \"ReadAllEvents\"}, descFilePath = [\"HES\",\"Messages\",\"ReadAllEvents.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.ReadAllEvents.commit_position\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"ReadAllEvents\"], baseName' = FName \"commit_position\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.ReadAllEvents.prepare_position\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"ReadAllEvents\"], baseName' = FName \"prepare_position\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.ReadAllEvents.max_count\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"ReadAllEvents\"], baseName' = FName \"max_count\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 5}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.ReadAllEvents.resolve_link_tos\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"ReadAllEvents\"], baseName' = FName \"resolve_link_tos\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".HES.Messages.ReadAllEventsCompleted\", haskellPrefix = [], parentModule = [MName \"HES\",MName \"Messages\"], baseName = MName \"ReadAllEventsCompleted\"}, descFilePath = [\"HES\",\"Messages\",\"ReadAllEventsCompleted.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.ReadAllEventsCompleted.commit_position\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"ReadAllEventsCompleted\"], baseName' = FName \"commit_position\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.ReadAllEventsCompleted.prepare_position\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"ReadAllEventsCompleted\"], baseName' = FName \"prepare_position\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.ReadAllEventsCompleted.events\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"ReadAllEventsCompleted\"], baseName' = FName \"events\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".HES.Messages.ResolvedEvent\", haskellPrefix = [], parentModule = [MName \"HES\",MName \"Messages\"], baseName = MName \"ResolvedEvent\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.ReadAllEventsCompleted.next_commit_position\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"ReadAllEventsCompleted\"], baseName' = FName \"next_commit_position\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.ReadAllEventsCompleted.next_prepare_position\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"ReadAllEventsCompleted\"], baseName' = FName \"next_prepare_position\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 40}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".HES.Messages.TransactionStart\", haskellPrefix = [], parentModule = [MName \"HES\",MName \"Messages\"], baseName = MName \"TransactionStart\"}, descFilePath = [\"HES\",\"Messages\",\"TransactionStart.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.TransactionStart.event_stream_id\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"TransactionStart\"], baseName' = FName \"event_stream_id\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.TransactionStart.expected_version\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"TransactionStart\"], baseName' = FName \"expected_version\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 5}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.TransactionStart.allow_forwarding\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"TransactionStart\"], baseName' = FName \"allow_forwarding\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".HES.Messages.TransactionStartCompleted\", haskellPrefix = [], parentModule = [MName \"HES\",MName \"Messages\"], baseName = MName \"TransactionStartCompleted\"}, descFilePath = [\"HES\",\"Messages\",\"TransactionStartCompleted.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.TransactionStartCompleted.transaction_id\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"TransactionStartCompleted\"], baseName' = FName \"transaction_id\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.TransactionStartCompleted.result\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"TransactionStartCompleted\"], baseName' = FName \"result\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".HES.Messages.OperationResult\", haskellPrefix = [], parentModule = [MName \"HES\",MName \"Messages\"], baseName = MName \"OperationResult\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.TransactionStartCompleted.message\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"TransactionStartCompleted\"], baseName' = FName \"message\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".HES.Messages.TransactionWrite\", haskellPrefix = [], parentModule = [MName \"HES\",MName \"Messages\"], baseName = MName \"TransactionWrite\"}, descFilePath = [\"HES\",\"Messages\",\"TransactionWrite.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.TransactionWrite.transaction_id\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"TransactionWrite\"], baseName' = FName \"transaction_id\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.TransactionWrite.events\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"TransactionWrite\"], baseName' = FName \"events\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".HES.Messages.NewEvent\", haskellPrefix = [], parentModule = [MName \"HES\",MName \"Messages\"], baseName = MName \"NewEvent\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.TransactionWrite.allow_forwarding\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"TransactionWrite\"], baseName' = FName \"allow_forwarding\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".HES.Messages.TransactionWriteCompleted\", haskellPrefix = [], parentModule = [MName \"HES\",MName \"Messages\"], baseName = MName \"TransactionWriteCompleted\"}, descFilePath = [\"HES\",\"Messages\",\"TransactionWriteCompleted.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.TransactionWriteCompleted.transaction_id\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"TransactionWriteCompleted\"], baseName' = FName \"transaction_id\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.TransactionWriteCompleted.result\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"TransactionWriteCompleted\"], baseName' = FName \"result\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".HES.Messages.OperationResult\", haskellPrefix = [], parentModule = [MName \"HES\",MName \"Messages\"], baseName = MName \"OperationResult\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.TransactionWriteCompleted.message\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"TransactionWriteCompleted\"], baseName' = FName \"message\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".HES.Messages.TransactionCommit\", haskellPrefix = [], parentModule = [MName \"HES\",MName \"Messages\"], baseName = MName \"TransactionCommit\"}, descFilePath = [\"HES\",\"Messages\",\"TransactionCommit.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.TransactionCommit.transaction_id\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"TransactionCommit\"], baseName' = FName \"transaction_id\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.TransactionCommit.allow_forwarding\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"TransactionCommit\"], baseName' = FName \"allow_forwarding\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".HES.Messages.TransactionCommitCompleted\", haskellPrefix = [], parentModule = [MName \"HES\",MName \"Messages\"], baseName = MName \"TransactionCommitCompleted\"}, descFilePath = [\"HES\",\"Messages\",\"TransactionCommitCompleted.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.TransactionCommitCompleted.transaction_id\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"TransactionCommitCompleted\"], baseName' = FName \"transaction_id\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.TransactionCommitCompleted.result\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"TransactionCommitCompleted\"], baseName' = FName \"result\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".HES.Messages.OperationResult\", haskellPrefix = [], parentModule = [MName \"HES\",MName \"Messages\"], baseName = MName \"OperationResult\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.TransactionCommitCompleted.message\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"TransactionCommitCompleted\"], baseName' = FName \"message\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".HES.Messages.SubscribeToStream\", haskellPrefix = [], parentModule = [MName \"HES\",MName \"Messages\"], baseName = MName \"SubscribeToStream\"}, descFilePath = [\"HES\",\"Messages\",\"SubscribeToStream.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.SubscribeToStream.event_stream_id\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"SubscribeToStream\"], baseName' = FName \"event_stream_id\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.SubscribeToStream.resolve_link_tos\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"SubscribeToStream\"], baseName' = FName \"resolve_link_tos\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".HES.Messages.SubscriptionConfirmation\", haskellPrefix = [], parentModule = [MName \"HES\",MName \"Messages\"], baseName = MName \"SubscriptionConfirmation\"}, descFilePath = [\"HES\",\"Messages\",\"SubscriptionConfirmation.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.SubscriptionConfirmation.last_commit_position\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"SubscriptionConfirmation\"], baseName' = FName \"last_commit_position\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.SubscriptionConfirmation.last_event_number\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"SubscriptionConfirmation\"], baseName' = FName \"last_event_number\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 5}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".HES.Messages.StreamEventAppeared\", haskellPrefix = [], parentModule = [MName \"HES\",MName \"Messages\"], baseName = MName \"StreamEventAppeared\"}, descFilePath = [\"HES\",\"Messages\",\"StreamEventAppeared.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".HES.Messages.StreamEventAppeared.event\", haskellPrefix' = [], parentModule' = [MName \"HES\",MName \"Messages\",MName \"StreamEventAppeared\"], baseName' = FName \"event\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = True, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".HES.Messages.ResolvedEvent\", haskellPrefix = [], parentModule = [MName \"HES\",MName \"Messages\"], baseName = MName \"ResolvedEvent\"}), hsRawDefault = Nothing, hsDefault = Nothing}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".HES.Messages.UnsubscribeFromStream\", haskellPrefix = [], parentModule = [MName \"HES\",MName \"Messages\"], baseName = MName \"UnsubscribeFromStream\"}, descFilePath = [\"HES\",\"Messages\",\"UnsubscribeFromStream.hs\"], isGroup = False, fields = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".HES.Messages.SubscriptionDropped\", haskellPrefix = [], parentModule = [MName \"HES\",MName \"Messages\"], baseName = MName \"SubscriptionDropped\"}, descFilePath = [\"HES\",\"Messages\",\"SubscriptionDropped.hs\"], isGroup = False, fields = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False}], enums = [EnumInfo {enumName = ProtoName {protobufName = FIName \".HES.Messages.OperationResult\", haskellPrefix = [], parentModule = [MName \"HES\",MName \"Messages\"], baseName = MName \"OperationResult\"}, enumFilePath = [\"HES\",\"Messages\",\"OperationResult.hs\"], enumValues = [(EnumCode {getEnumCode = 0},\"Success\"),(EnumCode {getEnumCode = 1},\"PrepareTimeout\"),(EnumCode {getEnumCode = 2},\"CommitTimeout\"),(EnumCode {getEnumCode = 3},\"ForwardTimeout\"),(EnumCode {getEnumCode = 4},\"WrongExpectedVersion\"),(EnumCode {getEnumCode = 5},\"StreamDeleted\"),(EnumCode {getEnumCode = 6},\"InvalidTransaction\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".HES.Messages.ReadEventCompleted.ReadEventResult\", haskellPrefix = [], parentModule = [MName \"HES\",MName \"Messages\",MName \"ReadEventCompleted\"], baseName = MName \"ReadEventResult\"}, enumFilePath = [\"HES\",\"Messages\",\"ReadEventCompleted\",\"ReadEventResult.hs\"], enumValues = [(EnumCode {getEnumCode = 0},\"Success\"),(EnumCode {getEnumCode = 1},\"NotFound\"),(EnumCode {getEnumCode = 2},\"NoStream\"),(EnumCode {getEnumCode = 3},\"StreamDeleted\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".HES.Messages.ReadStreamEventsCompleted.ReadStreamResult\", haskellPrefix = [], parentModule = [MName \"HES\",MName \"Messages\",MName \"ReadStreamEventsCompleted\"], baseName = MName \"ReadStreamResult\"}, enumFilePath = [\"HES\",\"Messages\",\"ReadStreamEventsCompleted\",\"ReadStreamResult.hs\"], enumValues = [(EnumCode {getEnumCode = 0},\"Success\"),(EnumCode {getEnumCode = 1},\"NoStream\"),(EnumCode {getEnumCode = 2},\"StreamDeleted\"),(EnumCode {getEnumCode = 3},\"NotModified\"),(EnumCode {getEnumCode = 4},\"Error\")]}], knownKeyMap = fromList []}"
 
fileDescriptorProto :: FileDescriptorProto
fileDescriptorProto
 = P'.getFromBS (P'.wireGet 11)
    (P'.pack
      "\252\SUB\n\ESCsrc/proto/event_store.proto\DC2\fHES.Messages\"a\n\bNewEvent\DC2\DLE\n\bevent_id\CAN\SOH \STX(\f\DC2\DC2\n\nevent_type\CAN\STX \SOH(\t\DC2\SI\n\ais_json\CAN\ETX \STX(\b\DC2\f\n\EOTdata\CAN\EOT \STX(\f\DC2\DLE\n\bmetadata\CAN\ENQ \SOH(\f\"\130\SOH\n\vEventRecord\DC2\ETB\n\SIevent_stream_id\CAN\SOH \STX(\t\DC2\DC4\n\fevent_number\CAN\STX \STX(\ENQ\DC2\DLE\n\bevent_id\CAN\ETX \STX(\f\DC2\DC2\n\nevent_type\CAN\EOT \SOH(\t\DC2\f\n\EOTdata\CAN\ENQ \STX(\f\DC2\DLE\n\bmetadata\CAN\ACK \SOH(\f\"i\n\DC4ResolvedIndexedEvent\DC2(\n\ENQevent\CAN\SOH \STX(\v2\EM.HES.Messages.EventRecord\DC2'\n\EOTlink\CAN\STX \SOH(\v2\EM.HES.Messages.EventRecord\"\149\SOH\n\rResolvedEvent\DC2(\n\ENQevent\CAN\SOH \STX(\v2\EM.HES.Messages.EventRecord\DC2'\n\EOTlink\CAN\STX \SOH(\v2\EM.HES.Messages.EventRecord\DC2\ETB\n\SIcommit_position\CAN\ETX \STX(\ETX\DC2\CAN\n\DLEprepare_position\CAN\EOT \STX(\ETX\"\131\SOH\n\rDeniedToRoute\DC2\FS\n\DC4external_tcp_address\CAN\SOH \STX(\t\DC2\EM\n\DC1external_tcp_port\CAN\STX \STX(\ENQ\DC2\GS\n\NAKexternal_http_address\CAN\ETX \STX(\t\DC2\SUB\n\DC2external_http_port\CAN\EOT \STX(\ENQ\"x\n\fCreateStream\DC2\ETB\n\SIevent_stream_id\CAN\SOH \STX(\t\DC2\DC2\n\nrequest_id\CAN\STX \STX(\f\DC2\DLE\n\bmetadata\CAN\ETX \SOH(\f\DC2\CAN\n\DLEallow_forwarding\CAN\EOT \STX(\b\DC2\SI\n\ais_json\CAN\ENQ \STX(\b\"W\n\NAKCreateStreamCompleted\DC2-\n\ACKresult\CAN\SOH \STX(\SO2\GS.HES.Messages.OperationResult\DC2\SI\n\amessage\CAN\STX \SOH(\t\"\130\SOH\n\vWriteEvents\DC2\ETB\n\SIevent_stream_id\CAN\SOH \STX(\t\DC2\CAN\n\DLEexpected_version\CAN\STX \STX(\ENQ\DC2&\n\ACKevents\CAN\ETX \ETX(\v2\SYN.HES.Messages.NewEvent\DC2\CAN\n\DLEallow_forwarding\CAN\EOT \STX(\b\"r\n\DC4WriteEventsCompleted\DC2-\n\ACKresult\CAN\SOH \STX(\SO2\GS.HES.Messages.OperationResult\DC2\SI\n\amessage\CAN\STX \SOH(\t\DC2\SUB\n\DC2first_event_number\CAN\ETX \STX(\ENQ\"[\n\fDeleteStream\DC2\ETB\n\SIevent_stream_id\CAN\SOH \STX(\t\DC2\CAN\n\DLEexpected_version\CAN\STX \STX(\ENQ\DC2\CAN\n\DLEallow_forwarding\CAN\ETX \STX(\b\"W\n\NAKDeleteStreamCompleted\DC2-\n\ACKresult\CAN\SOH \STX(\SO2\GS.HES.Messages.OperationResult\DC2\SI\n\amessage\CAN\STX \SOH(\t\"T\n\tReadEvent\DC2\ETB\n\SIevent_stream_id\CAN\SOH \STX(\t\DC2\DC4\n\fevent_number\CAN\STX \STX(\ENQ\DC2\CAN\n\DLEresolve_link_tos\CAN\ETX \STX(\b\"\216\SOH\n\DC2ReadEventCompleted\DC2@\n\ACKresult\CAN\SOH \STX(\SO20.HES.Messages.ReadEventCompleted.ReadEventResult\DC21\n\ENQevent\CAN\STX \STX(\v2\".HES.Messages.ResolvedIndexedEvent\"M\n\SIReadEventResult\DC2\v\n\aSuccess\DLE\NUL\DC2\f\n\bNotFound\DLE\SOH\DC2\f\n\bNoStream\DLE\STX\DC2\DC1\n\rStreamDeleted\DLE\ETX\"s\n\DLEReadStreamEvents\DC2\ETB\n\SIevent_stream_id\CAN\SOH \STX(\t\DC2\EM\n\DC1from_event_number\CAN\STX \STX(\ENQ\DC2\DC1\n\tmax_count\CAN\ETX \STX(\ENQ\DC2\CAN\n\DLEresolve_link_tos\CAN\EOT \STX(\b\"\229\STX\n\EMReadStreamEventsCompleted\DC22\n\ACKevents\CAN\SOH \ETX(\v2\".HES.Messages.ResolvedIndexedEvent\DC2H\n\ACKresult\CAN\STX \STX(\SO28.HES.Messages.ReadStreamEventsCompleted.ReadStreamResult\DC2\EM\n\DC1next_event_number\CAN\ETX \STX(\ENQ\DC2\EM\n\DC1last_event_number\CAN\EOT \STX(\ENQ\DC2\CAN\n\DLEis_end_of_stream\CAN\ENQ \STX(\b\DC2\FS\n\DC4last_commit_position\CAN\ACK \STX(\ETX\"\\\n\DLEReadStreamResult\DC2\v\n\aSuccess\DLE\NUL\DC2\f\n\bNoStream\DLE\SOH\DC2\DC1\n\rStreamDeleted\DLE\STX\DC2\SI\n\vNotModified\DLE\ETX\DC2\t\n\ENQError\DLE\EOT\"o\n\rReadAllEvents\DC2\ETB\n\SIcommit_position\CAN\SOH \STX(\ETX\DC2\CAN\n\DLEprepare_position\CAN\STX \STX(\ETX\DC2\DC1\n\tmax_count\CAN\ETX \STX(\ENQ\DC2\CAN\n\DLEresolve_link_tos\CAN\EOT \STX(\b\"\181\SOH\n\SYNReadAllEventsCompleted\DC2\ETB\n\SIcommit_position\CAN\SOH \STX(\ETX\DC2\CAN\n\DLEprepare_position\CAN\STX \STX(\ETX\DC2+\n\ACKevents\CAN\ETX \ETX(\v2\ESC.HES.Messages.ResolvedEvent\DC2\FS\n\DC4next_commit_position\CAN\EOT \STX(\ETX\DC2\GS\n\NAKnext_prepare_position\CAN\ENQ \STX(\ETX\"_\n\DLETransactionStart\DC2\ETB\n\SIevent_stream_id\CAN\SOH \STX(\t\DC2\CAN\n\DLEexpected_version\CAN\STX \STX(\ENQ\DC2\CAN\n\DLEallow_forwarding\CAN\ETX \STX(\b\"s\n\EMTransactionStartCompleted\DC2\SYN\n\SOtransaction_id\CAN\SOH \STX(\ETX\DC2-\n\ACKresult\CAN\STX \STX(\SO2\GS.HES.Messages.OperationResult\DC2\SI\n\amessage\CAN\ETX \SOH(\t\"l\n\DLETransactionWrite\DC2\SYN\n\SOtransaction_id\CAN\SOH \STX(\ETX\DC2&\n\ACKevents\CAN\STX \ETX(\v2\SYN.HES.Messages.NewEvent\DC2\CAN\n\DLEallow_forwarding\CAN\ETX \STX(\b\"s\n\EMTransactionWriteCompleted\DC2\SYN\n\SOtransaction_id\CAN\SOH \STX(\ETX\DC2-\n\ACKresult\CAN\STX \STX(\SO2\GS.HES.Messages.OperationResult\DC2\SI\n\amessage\CAN\ETX \SOH(\t\"E\n\DC1TransactionCommit\DC2\SYN\n\SOtransaction_id\CAN\SOH \STX(\ETX\DC2\CAN\n\DLEallow_forwarding\CAN\STX \STX(\b\"t\n\SUBTransactionCommitCompleted\DC2\SYN\n\SOtransaction_id\CAN\SOH \STX(\ETX\DC2-\n\ACKresult\CAN\STX \STX(\SO2\GS.HES.Messages.OperationResult\DC2\SI\n\amessage\CAN\ETX \SOH(\t\"F\n\DC1SubscribeToStream\DC2\ETB\n\SIevent_stream_id\CAN\SOH \STX(\t\DC2\CAN\n\DLEresolve_link_tos\CAN\STX \STX(\b\"S\n\CANSubscriptionConfirmation\DC2\FS\n\DC4last_commit_position\CAN\SOH \STX(\ETX\DC2\EM\n\DC1last_event_number\CAN\STX \SOH(\ENQ\"A\n\DC3StreamEventAppeared\DC2*\n\ENQevent\CAN\SOH \STX(\v2\ESC.HES.Messages.ResolvedEvent\"\ETB\n\NAKUnsubscribeFromStream\"\NAK\n\DC3SubscriptionDropped*\158\SOH\n\SIOperationResult\DC2\v\n\aSuccess\DLE\NUL\DC2\DC2\n\SOPrepareTimeout\DLE\SOH\DC2\DC1\n\rCommitTimeout\DLE\STX\DC2\DC2\n\SOForwardTimeout\DLE\ETX\DC2\CAN\n\DC4WrongExpectedVersion\DLE\EOT\DC2\DC1\n\rStreamDeleted\DLE\ENQ\DC2\SYN\n\DC2InvalidTransaction\DLE\ACK")